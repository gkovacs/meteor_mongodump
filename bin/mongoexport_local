#!/usr/bin/env node
// Generated by LiveScript 1.4.0
(function(){
  var fs, mongoUri, exec, datecmd, curdate, mongourl, meteorsite, meteorsitebase, dumpdir, listcollections, all_collections, mkexport, i$, len$, collection;
  fs = require('fs');
  mongoUri = require('mongo-uri');
  exec = require('shelljs').exec;
  datecmd = 'date';
  if (fs.existsSync('/usr/local/bin/gdate')) {
    datecmd = '/usr/local/bin/gdate';
  }
  curdate = exec(datecmd + ' --rfc-3339=seconds').output.split(' ').join('_').trim();
  mongourl = 'mongodb://localhost:27017/default';
  meteorsite = meteorsitebase = 'local';
  dumpdir = [meteorsitebase, curdate].join('_');
  console.log('mongourl: ' + mongourl);
  listcollections = function(uri){
    var login, host, db, user, passwd, mongocmd, mongocmdstr;
    login = mongoUri.parse(uri);
    if (login['hosts'][0] === 'localhost') {
      login['hosts'][0] = '127.0.0.1';
    }
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    mongocmd = ['mongo'];
    if (user != null) {
      mongocmd.push("--username " + user);
    }
    if (passwd != null) {
      mongocmd.push("--password " + passwd);
    }
    mongocmd.push((host + '/' + db) + " --eval 'db.getCollectionNames()'");
    mongocmdstr = mongocmd.join(' ');
    return levn.parse('[String]', exec(mongocmdstr).output.trim().split('\n').filter(function(x){
      return x.indexOf('MongoDB shell version') === -1 && x.indexOf('connecting to:') === -1;
    }).join('\n'));
  };
  console.log('collections:');
  all_collections = listcollections(mongourl);
  console.log(all_collections);
  if (all_collections.length === 0) {
    console.log('no collections to dump');
    process.exit();
  }
  mkexport = function(uri, collection){
    var login, host, outfile;
    login = mongoUri.parse(uri);
    if (login.database == null) {
      login.database = 'default';
    }
    if (login['hosts'][0] === 'localhost') {
      login['hosts'][0] = '127.0.0.1';
    }
    host = login['hosts'][0] + ':' + login['ports'][0];
    outfile = dumpdir + '/' + collection + '.json';
    return exec('mongoexport --jsonArray -h ' + host + (" --db " + login.database + " -c ") + collection + " -o '" + outfile + "'");
  };
  for (i$ = 0, len$ = all_collections.length; i$ < len$; ++i$) {
    collection = all_collections[i$];
    if (collection.startsWith('system.')) {
      continue;
    }
    mkexport(mongourl, collection);
  }
}).call(this);
