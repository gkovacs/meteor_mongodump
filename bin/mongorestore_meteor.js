// Generated by LiveScript 1.4.0
(function(){
  var fs, mongoUri, exec, meteorsite, dumpdir, meteorsitebase, mongourl, mkrestore, i$, ref$, len$, dbpath;
  fs = require('fs');
  mongoUri = require('mongo-uri');
  exec = require('shelljs').exec;
  meteorsite = process.argv[2];
  if (meteorsite == null) {
    console.log('need to provide meteorsite');
    process.exit();
  }
  dumpdir = process.argv[3];
  if (dumpdir == null) {
    console.log('need to provide dumpdir');
    process.exit();
  }
  if (meteorsite.indexOf('.meteor.com') === -1) {
    meteorsite = meteorsite + '.meteor.com';
  }
  meteorsitebase = meteorsite.split('.meteor.com').join('');
  if (!fs.existsSync(dumpdir)) {
    console.log('dumpdir does not exist: ' + dumpdir);
    process.exit();
  }
  mongourl = exec("meteor mongo --url " + meteorsite).stdout.trim();
  console.log('mongourl: ' + mongourl);
  if (mongourl.indexOf('mongodb://') !== 0) {
    console.log('mongourl does not begin with mongodb://');
    process.exit();
  }
  mkrestore = function(uri, dumppath){
    var login, host, db, user, passwd;
    login = mongoUri.parse(uri);
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    return exec('mongorestore --drop --host ' + host + ' --db ' + db + ' --username ' + user + ' --password ' + passwd + " '" + dumppath + "'");
  };
  for (i$ = 0, len$ = (ref$ = fs.readdirSync(dumpdir)).length; i$ < len$; ++i$) {
    dbpath = ref$[i$];
    console.log(dumpdir + '/' + dbpath);
    mkrestore(mongourl, dumpdir + "/" + dbpath);
  }
}).call(this);
