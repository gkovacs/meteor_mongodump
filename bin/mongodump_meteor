#!/usr/bin/env node
// Generated by LiveScript 1.3.1
(function(){
  var fs, mongoUri, ref$, run, exec, datecmd, curdate, meteorsite, meteorsitebase, dumpdir, mongourl, listcollections, all_collections, mkexport, i$, len$, collection;
  fs = require('fs');
  mongoUri = require('mongo-uri');
  ref$ = require('execSync'), run = ref$.run, exec = ref$.exec;
  datecmd = 'date';
  if (fs.existsSync('/usr/local/bin/gdate')) {
    datecmd = '/usr/local/bin/gdate';
  }
  curdate = exec(datecmd + ' --rfc-3339=seconds').stdout.split(' ').join('_').trim();
  meteorsite = process.argv[2];
  if (meteorsite == null) {
    console.log('must provide meteor site');
    process.exit();
  }
  if (meteorsite.indexOf('.meteor.com') === -1) {
    meteorsite = meteorsite + '.meteor.com';
  }
  meteorsitebase = meteorsite.split('.meteor.com').join('');
  dumpdir = [meteorsitebase, curdate].join('_');
  mongourl = exec("meteor mongo --url " + meteorsite).stdout.trim();
  console.log('mongourl: ' + mongourl);
  if (mongourl.indexOf('mongodb://') !== 0) {
    console.log('mongourl does not begin with mongodb://');
    process.exit();
  }
  listcollections = function(uri){
    var login, host, db, user, passwd;
    login = mongoUri.parse(uri);
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    return exec("mongo --username " + user + " --password " + passwd + " " + (host + '/' + db) + " --eval 'db.getCollectionNames()'").stdout.trim().split('\n').filter(function(x){
      return x.indexOf('MongoDB shell version') === -1 && x.indexOf('connecting to:') === -1;
    }).join('\n').split(',');
  };
  console.log('collections:');
  all_collections = listcollections(mongourl);
  console.log(all_collections);
  if (all_collections.length === 0) {
    console.log('no collections to dump');
    process.exit();
  }
  mkexport = function(uri, collection){
    var login, host, db, user, passwd;
    login = mongoUri.parse(uri);
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    return run('mongodump -h ' + host + ' -d ' + db + ' -u ' + user + ' -p ' + passwd + " -c " + collection + " -o '" + dumpdir + "'");
  };
  for (i$ = 0, len$ = all_collections.length; i$ < len$; ++i$) {
    collection = all_collections[i$];
    mkexport(mongourl, collection);
  }
}).call(this);
