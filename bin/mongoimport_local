#!/usr/bin/env node
// Generated by LiveScript 1.5.0
(function(){
  var fs, mongoUri, sysexec, glob, exec, dumpdir, mongourl, meteorsite, meteorsitebase, mkrestore, i$, ref$, len$, dbpath, slice$ = [].slice;
  fs = require('fs');
  mongoUri = require('mongo-uri');
  sysexec = require('sysexec');
  glob = require('glob');
  exec = require('shelljs').exec;
  dumpdir = process.argv[2];
  if (dumpdir == null) {
    console.log('need to provide dumpdir');
    process.exit();
  }
  if (!fs.existsSync(dumpdir)) {
    console.log('dumpdir does not exist: ' + dumpdir);
    process.exit();
  }
  mongourl = 'mongodb://localhost:27017/default';
  meteorsite = meteorsitebase = 'local';
  console.log('mongourl: ' + mongourl);
  mkrestore = function(uri, dumppath){
    var login, host, db, user, passwd, collection;
    login = mongoUri.parse(uri);
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    collection = slice$.call(dumppath.split('/'), -1)[0].split('.json').join('');
    console.log("mongoimport --jsonArray --upsert --host " + host + " --db " + db + " --collection " + collection + " --file " + dumppath);
    return exec("mongoimport --jsonArray --upsert --host " + host + " --db " + db + " --collection " + collection + " --file " + dumppath);
  };
  for (i$ = 0, len$ = (ref$ = glob.sync(dumpdir + '/*.json')).length; i$ < len$; ++i$) {
    dbpath = ref$[i$];
    console.log(dbpath);
    mkrestore(mongourl, dbpath);
  }
}).call(this);
