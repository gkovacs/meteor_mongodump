#!/usr/bin/env node
// Generated by LiveScript 1.4.0
(function(){
  var fs, levn, mongoUri, exec, herokusite, dumpdir, mongourl, collections, mkrestore, i$, ref$, len$, dbpath;
  fs = require('fs');
  levn = require('levn');
  mongoUri = require('mongo-uri');
  exec = require('shelljs').exec;
  herokusite = process.argv[2];
  if (herokusite == null) {
    console.log('need to provide herokusite');
    process.exit();
  }
  herokusite = herokusite.split('.herokuapp.com').join('');
  dumpdir = process.argv[3];
  if (dumpdir == null) {
    console.log('need to provide dumpdir');
    process.exit();
  }
  if (!fs.existsSync(dumpdir)) {
    console.log('dumpdir does not exist: ' + dumpdir);
    process.exit();
  }
  mongourl = exec("heroku config:get MONGOLAB_URI --app " + herokusite).output.trim();
  console.log('mongourl: ' + mongourl);
  if (mongourl.indexOf('mongodb://') !== 0) {
    console.log('mongourl does not begin with mongodb://');
    process.exit();
  }
  collections = process.argv[4];
  if (collections != null) {
    collections = levn.parse('[String]', collections);
  }
  mkrestore = function(uri, dumppath){
    var login, host, db, user, passwd, i$, ref$, len$, collection, results$ = [];
    login = mongoUri.parse(uri);
    host = login['hosts'][0] + ':' + login['ports'][0];
    db = login['database'];
    user = login['username'];
    passwd = login['password'];
    if (collections == null) {
      return exec('mongorestore --drop --host ' + host + ' --db ' + db + ' --username ' + user + ' --password ' + passwd + " '" + dumppath + "'");
    } else {
      for (i$ = 0, len$ = (ref$ = collections).length; i$ < len$; ++i$) {
        collection = ref$[i$];
        results$.push(exec('mongorestore --drop --host ' + host + ' --db ' + db + ' --collection ' + collection + ' --username ' + user + ' --password ' + passwd + " '" + dumppath + ("/" + collection + ".bson'")));
      }
      return results$;
    }
  };
  for (i$ = 0, len$ = (ref$ = fs.readdirSync(dumpdir)).length; i$ < len$; ++i$) {
    dbpath = ref$[i$];
    console.log(dumpdir + '/' + dbpath);
    mkrestore(mongourl, dumpdir + "/" + dbpath);
  }
}).call(this);
